{"mappings":"ACEA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,IAAM,EAAQ,SAAS,aAAa,CAAC,eAC/B,EAAgB,SAAS,aAAa,CAAC,MAE7C,CAAA,EAAc,SAAS,CAAG,iBAE1B,EAAc,SAAS,CAAI,uvBAoB3B,SAAS,IAAI,CAAC,WAAW,CAAC,GAE1B,IAAM,EAAO,EAAc,aAAa,CAAC,sBAoDzC,SAAS,EAAiB,CAAO,CAAE,CAAI,EACrC,IAAM,EAAe,SAAS,aAAa,CAAC,MAE5C,CAAA,EAAa,SAAS,CAAG,AAAS,UAAT,EAAmB,QAAU,UACtD,EAAa,YAAY,CAAC,UAAW,gBACrC,EAAa,SAAS,CAAG,EACzB,SAAS,IAAI,CAAC,WAAW,CAAC,GAC1B,WAAW,WAAM,OAAA,EAAa,MAAM,EAAI,EAAA,IAC1C,CAzDA,AAFmB,EAAK,aAAa,CAAC,UAE3B,gBAAgB,CAAC,QAAS,WACnC,IAcM,EAdA,EAAI,EAAK,IAAI,CAAC,KAAK,CAAC,IAAI,GACxB,EAAW,EAAK,QAAQ,CAAC,KAAK,CAAC,IAAI,GACnC,EAAS,EAAK,MAAM,CAAC,KAAK,CAC1B,EAAM,SAAS,EAAK,GAAG,CAAC,KAAK,CAAE,IAC/B,EAAS,WAAW,EAAK,MAAM,CAAC,KAAK,EAuB3C,CAAA,AAAI,AArBa,EAqBX,MAAM,CAAG,GACb,EAAiB,4CAA6C,SAEvD,GAxBW,EAiChB,CAAA,AAjC0B,EAiCpB,IAAM,AAjCc,EAiCR,EAAA,IACpB,EAAiB,kCAAmC,SAE7C,IARP,EAAiB,uBAAwB,SAElC,EALT,IAfA,CAFM,EAAS,SAAS,aAAa,CAAC,OAE/B,SAAS,CAAI,eAEZ,MAAA,CAXC,EAUC,qBAEF,MAAA,CAZI,EAWK,qBAET,MAAA,CAbc,EAYP,qBAEN,MAAA,CAdqB,EAalB,sBACe,MAAA,CAAlB,AAd0B,EAcnB,OAAO,CAAC,GAAG,eAE3B,EAAM,WAAW,CAAC,GAfhB,EAAiB,8BAA+B,WAChD,EAAK,KAAK,GAEd,EA8CF,GAEA,SAAS,gBAAgB,CAAC,MAAM,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAjD,EACE,IAAI,EAAM,CAAA,EAEV,EAAO,gBAAgB,CAAC,QAAS,WAE/B,IAAM,EAAa,AADN,MAAM,IAAI,CAAC,SAAS,gBAAgB,CAAC,aAC1B,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjC,EACE,IAAI,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,SAAS,CAChC,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,SAAS,QAMpC,AAHE,AAAC,MAAM,WAAW,EAAM,OAAO,CAAC,IAAK,OACpC,MAAM,WAAW,EAAM,OAAO,CAAC,IAAK,MAQ9B,EAAM,EAAM,aAAa,CAAC,GAAS,EAAM,aAAa,CAAC,IAL9D,EAAQ,WAAW,EAAM,OAAO,CAAC,IAAK,KACtC,EAAQ,WAAW,EAAM,OAAO,CAAC,IAAK,KAE/B,EAAM,EAAQ,EAAQ,EAAQ,EAIzC,GAEA,EAAM,CAAC,EAEP,IAAM,EAAQ,SAAS,aAAa,CAAC,QAErC,CAAA,EAAM,SAAS,CAAG,GAClB,EAAW,OAAO,CAAC,SAAC,CAApB,EAA4B,OAAA,EAAM,WAAW,CAAC,E,EAChD,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var table = document.querySelector(\"table tbody\");\n    var formContainer = document.createElement(\"div\");\n    formContainer.className = \"form-container\";\n    formContainer.innerHTML = '\\n    <form class=\"new-employee-form\">\\n      <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\\n      <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\\n      <label>Office:\\n        <select name=\"office\" data-qa=\"office\">\\n          <option>Tokyo</option>\\n          <option>Singapore</option>\\n          <option>London</option>\\n          <option>New York</option>\\n          <option>Edinburgh</option>\\n          <option>San Francisco</option>\\n        </select>\\n      </label>\\n      <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\\n      <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\\n      <button type=\"button\">Save to table</button>\\n    </form>\\n  ';\n    document.body.appendChild(formContainer);\n    var form = formContainer.querySelector(\".new-employee-form\");\n    var saveButton = form.querySelector(\"button\");\n    saveButton.addEventListener(\"click\", function() {\n        var n = form.name.value.trim();\n        var position = form.position.value.trim();\n        var office = form.office.value;\n        var age = parseInt(form.age.value, 10);\n        var salary = parseFloat(form.salary.value);\n        if (validateForm(n, position, age)) {\n            addRow(n, position, office, age, salary);\n            showNotification(\"Employee added successfully\", \"success\");\n            form.reset();\n        }\n    });\n    function addRow(n, position, office, age, salary) {\n        var newRow = document.createElement(\"tr\");\n        newRow.innerHTML = \"\\n      <td>\".concat(n, \"</td>\\n      <td>\").concat(position, \"</td>\\n      <td>\").concat(office, \"</td>\\n      <td>\").concat(age, \"</td>\\n      <td>$\").concat(salary.toFixed(2), \"</td>\\n    \");\n        table.appendChild(newRow);\n    }\n    function validateForm(n, position, age) {\n        if (n.length < 4) {\n            showNotification(\"Name should be at least 4 characters long\", \"error\");\n            return false;\n        }\n        if (!position) {\n            showNotification(\"Position is required\", \"error\");\n            return false;\n        }\n        if (age < 18 || age > 90) {\n            showNotification(\"Age should be between 18 and 90\", \"error\");\n            return false;\n        }\n        return true;\n    }\n    function showNotification(message, type) {\n        var notification = document.createElement(\"div\");\n        notification.className = type === \"error\" ? \"error\" : \"success\";\n        notification.setAttribute(\"data-qa\", \"notification\");\n        notification.innerText = message;\n        document.body.appendChild(notification);\n        setTimeout(function() {\n            return notification.remove();\n        }, 3000);\n    }\n});\ndocument.querySelectorAll(\"th\").forEach(function(header, index) {\n    var asc = true;\n    header.addEventListener(\"click\", function() {\n        var rows = Array.from(document.querySelectorAll(\"tbody tr\"));\n        var sortedRows = rows.sort(function(a, b) {\n            var cellA = a.cells[index].innerText;\n            var cellB = b.cells[index].innerText;\n            var isNumber = !isNaN(parseFloat(cellA.replace(\"$\", \"\"))) && !isNaN(parseFloat(cellB.replace(\"$\", \"\")));\n            if (isNumber) {\n                cellA = parseFloat(cellA.replace(\"$\", \"\"));\n                cellB = parseFloat(cellB.replace(\"$\", \"\"));\n                return asc ? cellA - cellB : cellB - cellA;\n            } else return asc ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);\n        });\n        asc = !asc;\n        var tbody = document.querySelector(\"tbody\");\n        tbody.innerHTML = \"\";\n        sortedRows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    });\n});\n\n//# sourceMappingURL=index.d80b56b4.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const table = document.querySelector('table tbody');\n  const formContainer = document.createElement('div');\n\n  formContainer.className = 'form-container';\n\n  formContainer.innerHTML = `\n    <form class=\"new-employee-form\">\n      <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\n      <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\n      <label>Office:\n        <select name=\"office\" data-qa=\"office\">\n          <option>Tokyo</option>\n          <option>Singapore</option>\n          <option>London</option>\n          <option>New York</option>\n          <option>Edinburgh</option>\n          <option>San Francisco</option>\n        </select>\n      </label>\n      <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\n      <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\n      <button type=\"button\">Save to table</button>\n    </form>\n  `;\n\n  document.body.appendChild(formContainer);\n\n  const form = formContainer.querySelector('.new-employee-form');\n  const saveButton = form.querySelector('button');\n\n  saveButton.addEventListener('click', function () {\n    const n = form.name.value.trim();\n    const position = form.position.value.trim();\n    const office = form.office.value;\n    const age = parseInt(form.age.value, 10);\n    const salary = parseFloat(form.salary.value);\n\n    if (validateForm(n, position, age)) {\n      addRow(n, position, office, age, salary);\n      showNotification('Employee added successfully', 'success');\n      form.reset();\n    }\n  });\n\n  function addRow(n, position, office, age, salary) {\n    const newRow = document.createElement('tr');\n\n    newRow.innerHTML = `\n      <td>${n}</td>\n      <td>${position}</td>\n      <td>${office}</td>\n      <td>${age}</td>\n      <td>$${salary.toFixed(2)}</td>\n    `;\n    table.appendChild(newRow);\n  }\n\n  function validateForm(n, position, age) {\n    if (n.length < 4) {\n      showNotification('Name should be at least 4 characters long', 'error');\n\n      return false;\n    }\n\n    if (!position) {\n      showNotification('Position is required', 'error');\n\n      return false;\n    }\n\n    if (age < 18 || age > 90) {\n      showNotification('Age should be between 18 and 90', 'error');\n\n      return false;\n    }\n\n    return true;\n  }\n\n  function showNotification(message, type) {\n    const notification = document.createElement('div');\n\n    notification.className = type === 'error' ? 'error' : 'success';\n    notification.setAttribute('data-qa', 'notification');\n    notification.innerText = message;\n    document.body.appendChild(notification);\n    setTimeout(() => notification.remove(), 3000);\n  }\n});\n\ndocument.querySelectorAll('th').forEach((header, index) => {\n  let asc = true;\n\n  header.addEventListener('click', () => {\n    const rows = Array.from(document.querySelectorAll('tbody tr'));\n    const sortedRows = rows.sort((a, b) => {\n      let cellA = a.cells[index].innerText;\n      let cellB = b.cells[index].innerText;\n\n      const isNumber =\n        !isNaN(parseFloat(cellA.replace('$', ''))) &&\n        !isNaN(parseFloat(cellB.replace('$', '')));\n\n      if (isNumber) {\n        cellA = parseFloat(cellA.replace('$', ''));\n        cellB = parseFloat(cellB.replace('$', ''));\n\n        return asc ? cellA - cellB : cellB - cellA;\n      } else {\n        return asc ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);\n      }\n    });\n\n    asc = !asc;\n\n    const tbody = document.querySelector('tbody');\n\n    tbody.innerHTML = '';\n    sortedRows.forEach((row) => tbody.appendChild(row));\n  });\n});\n"],"names":["document","addEventListener","table","querySelector","formContainer","createElement","className","innerHTML","body","appendChild","form","showNotification","message","type","notification","setAttribute","innerText","setTimeout","remove","saveButton","newRow","n","name","value","trim","position","office","age","parseInt","salary","parseFloat","length","concat","toFixed","reset","querySelectorAll","forEach","header","index","asc","sortedRows","rows","Array","from","sort","a","b","cellA","cells","cellB","isNaN","replace","localeCompare","tbody","row"],"version":3,"file":"index.d80b56b4.js.map"}